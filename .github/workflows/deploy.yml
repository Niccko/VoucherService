# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          ls
          tar -cvf deploy.tar . 
          
      - name: Backup project      
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_SSH_PWD }}
          port: 22
          script: |
            rm -rf /app/vouchers
            mkdir /app/vouchers

      - name: Publish project      
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_SSH_PWD }}
          port: 22
          source: "deploy.tar"
          target: "/app/vouchers"
      - name: Unpack and run     
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_SSH_PWD }}
          port: 22
          script: |
            cd /app/vouchers
            tar -xf deploy.tar
            docker rm -f vouchers_container
            docker build -t vouchers /app/vouchers
            docker run -d --name vouchers_container -p 8000:8000 --env-file /app/.env vouchers

          
          
          
            
